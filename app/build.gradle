apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

def chatsiePropertiesFile = rootProject.file("./Keys/chatsie.properties")
def chatsieProperties = new Properties()

chatsieProperties.load(new FileInputStream(chatsiePropertiesFile))


android {
    compileSdkVersion = 30

    defaultConfig {
        applicationId "eu.faircode.netguard"
        minSdkVersion 22
        targetSdkVersion 30
        versionCode 57
        versionName "Chatsie Notification Blocker 2.283"
        externalNativeBuild {
            cmake {
                cppFlags ""
                arguments "-DANDROID_PLATFORM=android-22"
                // https://developer.android.com/ndk/guides/cmake.html
            }
        }

        //ndkVersion "21.0.6113669"
        ndk {
            // https://developer.android.com/ndk/guides/abis.html#sa
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        }
    }

    lintOptions {
        disable 'MissingTranslation'
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    signingConfigs {
        release {
            storeFile file(chatsieProperties['storeFile'])
            storePassword chatsieProperties['storePassword']
            keyAlias chatsieProperties['keyAlias']
            keyPassword chatsieProperties['keyPassword']
        }
    }


    buildTypes {
        release {
            proguardFiles.add(file('proguard-rules.pro'))
            buildConfigField "boolean", "PLAY_STORE_RELEASE", "false"
            buildConfigField "String", "HOSTS_FILE_URI", "\"https://www.netguard.me/hosts\""
            buildConfigField "String", "GITHUB_LATEST_API", "\"https://api.github.com/repos/M66B/NetGuard/releases/latest\""
            minifyEnabled false
            signingConfig signingConfigs.release
        }

        debug {
            minifyEnabled = true
            useProguard = true
            proguardFiles.add(file('proguard-rules.pro'))
            buildConfigField "boolean", "PLAY_STORE_RELEASE", "false"
            buildConfigField "String", "HOSTS_FILE_URI", "\"https://www.netguard.me/hosts\""
            buildConfigField "String", "GITHUB_LATEST_API", "\"https://api.github.com/repos/M66B/NetGuard/releases/latest\""
        }
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            output.versionNameOverride = "${defaultConfig.versionName} - ${variant.buildType.name}"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // https://developer.android.com/jetpack/androidx/releases/
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.preference:preference:1.1.0'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'
    annotationProcessor 'androidx.annotation:annotation:1.1.0'

    // https://bumptech.github.io/glide/
    implementation('com.github.bumptech.glide:glide:4.10.0') {
        exclude group: "com.android.support"
    }
    annotationProcessor 'com.github.bumptech.glide:compiler:4.10.0'
    implementation "androidx.core:core-ktx:+"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    def appCenterSdkVersion = '4.0.0'
    implementation "com.microsoft.appcenter:appcenter-analytics:${appCenterSdkVersion}"
    implementation "com.microsoft.appcenter:appcenter-crashes:${appCenterSdkVersion}"
    implementation "com.microsoft.appcenter:appcenter-distribute:${appCenterSdkVersion}"

    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'


}
repositories {
    mavenCentral()
}
